// <auto-generated />
using System;
using CybersecDomain.context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CybersecDomain.Migrations
{
    [DbContext(typeof(CyberSecDbContext))]
    [Migration("20250815230609_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CybersecDomain.models.AlternativeTitle", b =>
                {
                    b.Property<uint>("AlternativeTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("AlternativeTitleId"));

                    b.Property<string>("AltTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("ProfileId")
                        .HasColumnType("int unsigned");

                    b.HasKey("AlternativeTitleId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Alternative_Title");
                });

            modelBuilder.Entity("CybersecDomain.models.Deliverable", b =>
                {
                    b.Property<uint>("DeliverableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("DeliverableId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeliverableName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<uint>("ProfileId")
                        .HasColumnType("int unsigned");

                    b.HasKey("DeliverableId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Deliverable");
                });

            modelBuilder.Entity("CybersecDomain.models.KeySkill", b =>
                {
                    b.Property<uint>("KeySkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("KeySkillId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("ProfileId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("KeySkillId");

                    b.HasIndex("ProfileId");

                    b.ToTable("KeySkills");
                });

            modelBuilder.Entity("CybersecDomain.models.Knowledge", b =>
                {
                    b.Property<uint>("KnowledgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("KnowledgeId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("KnowledgeName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<uint>("ProfileId")
                        .HasColumnType("int unsigned");

                    b.HasKey("KnowledgeId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Knowledge");
                });

            modelBuilder.Entity("CybersecDomain.models.Logo", b =>
                {
                    b.Property<uint>("LogoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("LogoId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("LogoId");

                    b.ToTable("Logos");
                });

            modelBuilder.Entity("CybersecDomain.models.MainTask", b =>
                {
                    b.Property<uint>("MainTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("MainTaskId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("ProfileId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("MainTaskId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Main_task");
                });

            modelBuilder.Entity("CybersecDomain.models.Profile", b =>
                {
                    b.Property<uint>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("profile_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("ProfileId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<uint?>("LogoId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Mission")
                        .HasColumnType("longtext");

                    b.Property<string>("Shortname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("shortname");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SummaryStatement")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ProfileId");

                    b.HasIndex("LogoId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("CybersecDomain.models.AlternativeTitle", b =>
                {
                    b.HasOne("CybersecDomain.models.Profile", "Profile")
                        .WithMany("AlternativeTitles")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("CybersecDomain.models.Deliverable", b =>
                {
                    b.HasOne("CybersecDomain.models.Profile", "Profile")
                        .WithMany("Deliverables")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("CybersecDomain.models.KeySkill", b =>
                {
                    b.HasOne("CybersecDomain.models.Profile", "Profile")
                        .WithMany("KeySkill")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("CybersecDomain.models.Knowledge", b =>
                {
                    b.HasOne("CybersecDomain.models.Profile", "Profile")
                        .WithMany("Knowledge")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("CybersecDomain.models.MainTask", b =>
                {
                    b.HasOne("CybersecDomain.models.Profile", "Profile")
                        .WithMany("MainTasks")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("CybersecDomain.models.Profile", b =>
                {
                    b.HasOne("CybersecDomain.models.Logo", "Logo")
                        .WithMany("Profiles")
                        .HasForeignKey("LogoId");

                    b.Navigation("Logo");
                });

            modelBuilder.Entity("CybersecDomain.models.Logo", b =>
                {
                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("CybersecDomain.models.Profile", b =>
                {
                    b.Navigation("AlternativeTitles");

                    b.Navigation("Deliverables");

                    b.Navigation("KeySkill");

                    b.Navigation("Knowledge");

                    b.Navigation("MainTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
